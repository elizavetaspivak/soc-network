{"version":3,"sources":["assets/images/avatar.jpg","api/api.ts","redux/dialogsReduser.tsx","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControl.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Header/Header.tsx","redux/authReduser.tsx","components/Header/HeaderContainer.tsx","utils/validators/object-helpers.ts","redux/usersReduser.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/usersSelectors.ts","components/Users/UsersContainer.tsx","Login/LoginForm.tsx","Login/Login.tsx","redux/appReduser.tsx","redux/redux-store.ts","hoc/WithSuspense.tsx","App.tsx","index.tsx","components/Users/Users.module.css","assets/loader.gif","components/common/Preloader/Preloader.tsx","components/Header/Header.module.css","components/common/FormsControls/FormsControl.tsx","utils/validators/validators.ts","redux/headerSelectors.ts","components/common/Paginator/Paginator.module.css","redux/profileReduser.tsx"],"names":["instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","followUser","userId","post","unfollowUser","delete","loginAPI","me","login","email","password","rememberMe","logout","getCaptcha","profileAPI","getMeProfile","getMeStatus","updateStatus","status","put","createPhoto","file","formData","FormData","append","updateProfile","updatedProfile","ADD_NEW_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReduser","state","action","type","body","newMessageBody","addNewMessageActionCreator","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","active","News","Helmet","content","Music","Settings","Header","props","header","image","src","alt","loginBlock","isAuth","onClick","SET_USER_DATA","SET_CAPTCHA","captcha","undefined","SetAuthUserDataAC","data","authThunkCreator","dispatch","a","response","resultCode","setCaptchaThunkCreator","captch","url","HeaderContainer","connect","getIsAuth","getLogin","logoutThunkCreator","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","isFollowing","userID","followUnfolowFlow","apiMethod","actionCreator","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","p","cn","selectedPage","pageNumber","e","User","user","unfollowUsersThunkCreator","followUsersThunkCreator","allUser","photos","small","userPhoto","followed","disabled","some","main","location","Users","titleUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","compose","getUsersThunkCreator","totalCount","bind","useEffect","Preloader","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","requiredField","formSummaryError","auth","loginThunkCreator","length","stopSubmit","_error","initialized","reducers","combineReducers","profilePage","profileReduser","dialogPage","stateCopy","app","formReducer","store","createStore","applyMiddleware","thunk","WithSuspense","Component","fallback","window","DialogsContainer","React","lazy","ProfileContainer","App","this","initializeApp","path","render","UsersContainer","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","style","preloader","loader","backgroundColor","Textarea","input","meta","showError","touched","formControl","value","maxLengthCreator","maxLength","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_NEW_STATUS","SET_NEW_PHOTO","posts","likesCount","profile","newPostBody","newStatus","postId","addPostActionCreator","setUserProfile","changeStatusAC","getMeProfileThunkCreator","getMeStatusThunkCreator","updateStatusThunkCreator","savePhoto","saveProfile","getState"],"mappings":"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","file":"static/js/main.2df1f21a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.e5117e8e.jpg\";","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        'API-KEY': '440db37e-eb2c-400b-bea3-188dde83621c'\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage: number, pageSize: number) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n    },\n    followUser(userId: number) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollowUser(userId: number) {\n        return instance.delete(`follow/${userId}`)\n    }\n}\n\nexport const loginAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email: string, password: string, rememberMe: boolean) {\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n    getCaptcha() {\n        return instance.get(`security/get-captcha-url`)\n    }\n}\n\nexport const profileAPI = {\n    getMeProfile(userId: number) {\n        return instance.get(`profile/` + userId)\n    },\n    getMeStatus(userId: number) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status/`, {status})\n    },\n    createPhoto(file: File) {\n        const formData = new FormData()\n        formData.append('image', file)\n        return instance.put(`/profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    updateProfile(updatedProfile: UpdateProfileType) {\n        return instance.put(`profile`, updatedProfile)\n    }\n}\n\nexport type UpdateProfileType = {\n    aboutMe: string;\n    contacts: {\n        facebook: string;\n        website: string | null;\n        vk: string;\n        twitter: string;\n        instagram: string;\n        youtube: string | null;\n        github: string;\n        mainLink: string | null;\n    };\n    lookingForAJob: boolean;\n    lookingForAJobDescription: string;\n    fullName: string;\n    userId: number;\n}\n\n\n","import React from 'react'\nimport {ActionType} from './profileReduser';\nimport {DialogPageType} from './redux-store';\n\nexport const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE'\n\nexport type NewMessageActionType = {\n    type: 'ADD-NEW-MESSAGE'\n    newMessageBody: string\n}\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Lizok'},\n        {id: 2, name: 'Oksik'},\n        {id: 3, name: 'Dimon'},\n        {id: 4, name: 'Denis'},\n        {id: 5, name: 'Masha'}\n    ],\n    messages: [\n        {id: 1, message: 'Hello'},\n        {id: 2, message: 'How are you?'},\n        {id: 3, message: 'What is your name?'}\n    ]\n}\n\nexport const dialogsReduser = (state: DialogPageType = initialState, action: ActionType) => {\n    switch (action.type) {\n        case ADD_NEW_MESSAGE: {\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {id: 4, message: body}]\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addNewMessageActionCreator = (newMessageBody: string): NewMessageActionType => ({\n    type: ADD_NEW_MESSAGE,\n    newMessageBody: newMessageBody\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2dvkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__WE9ql\",\"error\":\"FormsControl_error__eY5EU\",\"formSummaryError\":\"FormsControl_formSummaryError__3Uy6X\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import s from './Navbar.module.css'\nimport { NavLink } from 'react-router-dom';\n\nexport function Navbar() {\n    return (\n        <nav className={s.nav}>\n            <div className={s.item}>\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\n            </div>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.active}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\n            </div>\n        </nav>\n    )\n}\n\n\n","import {Helmet} from 'react-helmet';\nimport React from 'react';\n\nexport function News() {\n    return (\n        <div>\n            <Helmet>\n                <title>News</title>\n                <meta name=\"description\" content=\"News application\" />\n            </Helmet>\n            News\n        </div>\n    )\n}","import {Helmet} from 'react-helmet';\nimport React from 'react';\n\nexport function Music() {\n    return (\n        <div>\n            <Helmet>\n                <title>Music</title>\n                <meta name=\"description\" content=\"Music application\" />\n            </Helmet>\n            Music\n        </div>\n    )\n}\n\n\n","import {Helmet} from 'react-helmet';\nimport React from 'react';\n\nexport function Settings() {\n    return (\n        <div>\n            <Helmet>\n                <title>Settings</title>\n                <meta name=\"description\" content=\"Settings application\" />\n            </Helmet>\n            Settings\n        </div>\n    )\n}","import s from './Header.module.css'\nimport { NavLink } from 'react-router-dom';\nimport {ReactNode} from 'react';\n\ntype HeaderPropsType = {\n    children?: ReactNode\n    isAuth: boolean\n    login: string | null\n    logout: () => void\n}\n\nexport function Header(props: HeaderPropsType) {\n    return (\n        <header className={s.header}>\n            <div className={s.image}>\n                <img\n                     src=\"https://art.pixilart.com/efa94fefad71c75.png\"\n                     alt=\"\"/>\n            </div>\n            <div className={s.loginBlock}>\n                {props.isAuth\n                    ? <div className={s.logout}>{props.login} - <button onClick={props.logout}>Logout</button></div>\n                    : <NavLink className={s.login} to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    )\n}\n\n","import {loginAPI} from '../api/api';\nimport {stopSubmit} from 'redux-form';\n\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\nconst SET_CAPTCHA = 'samurai-network/auth/SET_CAPTCHA'\n\ntype SetUserDataAT = {\n    type: 'samurai-network/auth/SET_USER_DATA'\n    data: AuthStateType\n}\n\ntype SetCaptchaAT = {\n    type: 'samurai-network/auth/SET_CAPTCHA'\n    captch: string\n}\n\ntype AuthStateType = {\n    userId: number | null\n    email: string | null\n    login: string | null\n    isAuth: boolean\n    captcha?: string\n}\n\ntype ActionType = SetUserDataAT | SetCaptchaAT\n\nlet initialState: AuthStateType = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captcha: undefined\n}\n\nexport const authReducer = (state: AuthStateType = initialState, action: ActionType): AuthStateType => {\n    const stateCopy = {...state}\n\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...stateCopy,\n                ...action.data\n            }\n        case SET_CAPTCHA:\n            return {\n                ...stateCopy,\n                captcha: action.captch\n            }\n        default:\n            return state\n    }\n}\n\nexport const SetAuthUserDataAC = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetUserDataAT => ({\n    type: SET_USER_DATA,\n    data: {userId, email, login, isAuth}\n})\n\nexport const SetCaptchsAC = (captch: string): SetCaptchaAT => ({type: SET_CAPTCHA, captch})\n\nexport const authThunkCreator = () => async (dispatch: any) => {\n    let response = await loginAPI.me()\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data\n        dispatch(SetAuthUserDataAC(id, email, login, true))\n    }\n}\n\nexport const loginThunkCreator = (email: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\n    let response = await loginAPI.login(email, password, rememberMe)\n    if (response.data.resultCode === 0) {\n        dispatch(authThunkCreator())\n    } else if (response.data.resultCode === 10) {\n        dispatch(setCaptchaThunkCreator())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some Error'\n        dispatch(stopSubmit('login', {_error: message}))\n    }\n}\n\nexport const setCaptchaThunkCreator = () => async (dispatch: any) => {\n    let response = await loginAPI.getCaptcha()\n    if (response.data.resultCode === 0) {\n        dispatch(SetCaptchsAC(response.data.url))\n    }\n}\n\nexport const logoutThunkCreator = () => async (dispatch: any) => {\n    let response = await loginAPI.logout()\n    if (response.data.resultCode === 0) {\n        dispatch(SetAuthUserDataAC(null, null, null, false))\n    }\n}","import React from 'react';\nimport {Header} from './Header';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../../redux/redux-store';\nimport {logoutThunkCreator, SetAuthUserDataAC} from '../../redux/authReduser';\nimport {getIsAuth, getLogin} from '../../redux/headerSelectors';\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: string | null\n}\n\ntype HeaderContainerType = {\n    isAuth: boolean\n    login: string | null\n    SetAuthUserDataAC: any\n    logoutThunkCreator: any\n}\n\nexport function HeaderAPIContainer(props: HeaderContainerType) {\n        return <Header {...props} isAuth={props.isAuth} login={props.login} logout={props.logoutThunkCreator}/>\n\n}\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isAuth: getIsAuth(state),\n        login: getLogin(state)\n    }\n}\n\nexport const HeaderContainer = connect(mapStateToProps, {\n    SetAuthUserDataAC, logoutThunkCreator\n})(HeaderAPIContainer)\n\n","import {UserType} from '../../redux/usersReduser';\n\nexport const updateObjectInArray = (items: any, itemId: number, objPropName: string, newObjectProps: any) => {\n    return items.map((u: any) => u[objPropName] === itemId ? {...u, ...newObjectProps} : u)\n}","import React from 'react'\nimport {ActionType} from './profileReduser';\nimport {usersAPI} from '../api/api';\nimport {futimes} from 'fs';\nimport {updateObjectInArray} from '../utils/validators/object-helpers';\n\nexport type FollowAT = {\n    type: 'FOLLOW'\n    userId: number\n}\n\nexport type UnfollowAT = {\n    type: 'UNFOLLOW'\n    userId: number\n}\n\nexport type SetUsersAT = {\n    type: 'SET_USERS'\n    users: Array<UserType>\n}\n\nexport type SetCurrentPageAT = {\n    type: 'SET_CURRENT_PAGE'\n    currentPage: number\n}\n\nexport type SetTotalCountAT = {\n    type: 'SET_TOTAL_COUNT'\n    totalCount: number\n}\n\nexport type ToggleIsFetchingAT = {\n    type: 'TOGGLE_IS_FETCHING'\n    isFetching: boolean\n}\n\nexport type ToggleIsFollowingProgressAT = {\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS'\n    isFollowing: boolean\n    userID: number\n}\n\n\nexport const FOLLOW = 'FOLLOW'\nexport const UNFOLLOW = 'UNFOLLOW'\nexport const SET_USERS = 'SET_USERS'\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nexport const SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\n\ntype usersLocation = {\n    city: string\n    country: string\n}\nexport type UserType = {\n    id: number,\n    photos: PhotosType\n    followed: boolean,\n    name: string,\n    status: string\n}\ntype PhotosType = {\n    small: string | null\n    large: string | null\n}\nexport type UsersPageType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n}\n\nlet initialState: UsersPageType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\nexport const usersReduser = (state: UsersPageType = initialState, action: ActionType) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n            }\n        case SET_USERS:\n            return {...state, users: [...action.users]}\n        case SET_CURRENT_PAGE:\n            return {...state, currentPage: action.currentPage}\n        case SET_TOTAL_COUNT:\n            return {...state, totalUsersCount: action.totalCount}\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching}\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFollowing\n                    ? [...state.followingInProgress, action.userID]\n                    : state.followingInProgress.filter(id => id != action.userID)\n            }\n        default:\n            return state;\n    }\n}\n\nexport const follow = (userId: number): FollowAT => ({type: FOLLOW, userId})\n\nexport const unfollow = (userId: number): UnfollowAT => ({type: UNFOLLOW, userId})\n\nexport const setUsers = (users: Array<UserType>): SetUsersAT => ({type: SET_USERS, users})\n\nexport const setCurrentPage = (currentPage: number): SetCurrentPageAT => ({type: SET_CURRENT_PAGE, currentPage})\n\nexport const setTotalCount = (totalCount: number): SetTotalCountAT => ({type: SET_TOTAL_COUNT, totalCount})\n\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingAT => ({type: TOGGLE_IS_FETCHING, isFetching})\n\nexport const toggleIsFollowingProgress = (isFollowing: boolean, userID: number): ToggleIsFollowingProgressAT => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS, isFollowing, userID\n})\n\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => async (dispatch: any) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(currentPage))\n\n    let response = await usersAPI.getUsers(currentPage, pageSize)\n\n    dispatch(setUsers(response.data.items))\n    dispatch(setTotalCount(response.data.totalCount))\n    dispatch(toggleIsFetching(false))\n}\n\n\nconst followUnfolowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\n    dispatch(toggleIsFollowingProgress(true, userId))\n    let response = await apiMethod(userId)\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleIsFollowingProgress(false, userId))\n}\n\nexport const unfollowUsersThunkCreator = (userId: number) => async (dispatch: any) => {\n    await followUnfolowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollow)\n}\n\nexport const followUsersThunkCreator = (userId: number) => async (dispatch: any) => {\n    await followUnfolowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), follow)\n}","import s from './Paginator.module.css';\nimport React, {useState} from 'react';\nimport cn from 'classnames'\nimport {inspect} from 'util';\n\ntype PaginatorPropsType = {\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    portionSize: number\n}\n\nexport const Paginator: React.FC<PaginatorPropsType> = ({\n                                                            pageSize,\n                                                            totalUsersCount,\n                                                            currentPage,\n                                                            onPageChanged,\n                                                            portionSize= 5\n                                                        }) => {\n\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\n\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    const [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return (\n        <div>\n            {portionNumber > 1 &&\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>}\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => {\n                    return <span key={p} className={ cn({\n                        [s.selectedPage]: currentPage === p\n                    }, s.pageNumber)} onClick={(e) => onPageChanged(p)}>{p}</span>\n                }\n            )}\n            {portionCount > portionNumber &&\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>}\n        </div>\n    )\n}","import {UserType} from '../../redux/usersReduser';\nimport s from './Users.module.css';\nimport userPhoto from '../../assets/images/avatar.jpg'\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n\ntype UserPropsType = {\n    user: UserType\n    followingInProgress: number[]\n    unfollowUsersThunkCreator: (userId: number) => void\n    followUsersThunkCreator: (userId: number) => void\n}\n\nexport const User: React.FC<UserPropsType> = ({\n                                                  user,\n                                                  followingInProgress,\n                                                  unfollowUsersThunkCreator,\n                                                  followUsersThunkCreator\n                                              }) => {\n    return (\n        <div className={s.allUser}>\n            <div className={s.image}>\n                <NavLink to={'/profile/' + user.id}>\n                    <img\n                        src={user.photos.small != null ? user.photos.small : userPhoto}\n                        alt=\"\"/>\n                </NavLink>\n                {\n                    user.followed\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                            unfollowUsersThunkCreator(user.id)\n                        }}>Unfollow</button>\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                            followUsersThunkCreator(user.id)\n                        }}>Follow</button>\n                }\n            </div>\n            <div className={s.main}>\n                <div>\n                    <div>{user.name}</div>\n                    <div>{user.status}</div>\n                </div>\n                <div className={s.location}>\n                    <div> {'u.location.city'},</div>\n                    <div>{'u.location.country'}</div>\n                </div>\n            </div>\n        </div>\n    )\n}","import {UserType} from '../../redux/usersReduser';\nimport s from './Users.module.css';\nimport React from 'react';\nimport {Helmet} from 'react-helmet';\nimport {Paginator} from '../common/Paginator/Paginator';\nimport {User} from './User';\n\ntype UsersPropsType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    onPageChanged: (pageNumber: number) => void\n    followingInProgress: number[]\n    toggleIsFollowingProgress: (isFollowing: boolean, userId: number) => void\n    unfollowUsersThunkCreator: (userId: number) => void\n    followUsersThunkCreator: (userId: number) => void\n}\n\nexport const Users: React.FC<UsersPropsType> = ({\n                                                    users,\n                                                    pageSize,\n                                                    totalUsersCount,\n                                                    currentPage,\n                                                    onPageChanged,\n                                                    followingInProgress,\n                                                    unfollowUsersThunkCreator,\n                                                    followUsersThunkCreator\n                                                }) => {\n\n    return (\n        <div className={s.allUser}>\n            <Helmet>\n                <title>Users</title>\n                <meta name=\"description\" content=\"Users application\"/>\n            </Helmet>\n            <div className={s.titleUsers}>Users</div>\n            <Paginator pageSize={pageSize} totalUsersCount={totalUsersCount} currentPage={currentPage}\n                       onPageChanged={onPageChanged} portionSize={10}/>\n            <div>\n                {users.map((u: UserType) => <User user={u} followingInProgress={followingInProgress}\n                                                  followUsersThunkCreator={followUsersThunkCreator}\n                                                  unfollowUsersThunkCreator={unfollowUsersThunkCreator}/>)}\n            </div>\n        </div>\n    )\n}","import {AppStateType} from './redux-store';\n\nexport const getUsers = (state: AppStateType) => {\n    return state.usersPage.users\n}\n\nexport const getPageSize = (state: AppStateType) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state: AppStateType) => {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowingInProgress = (state: AppStateType) => {\n    return state.usersPage.followingInProgress\n}","import {connect, useDispatch} from 'react-redux';\nimport {AppStateType} from '../../redux/redux-store';\nimport {\n    follow, followUsersThunkCreator,\n    getUsersThunkCreator,\n    setCurrentPage,\n    toggleIsFollowingProgress,\n    unfollow, unfollowUsersThunkCreator,\n    UserType\n} from '../../redux/usersReduser';\nimport React, {useEffect} from 'react';\nimport {Users} from './Users';\nimport {Preloader} from '../common/Preloader/Preloader';\nimport {compose} from 'redux';\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers\n} from '../../redux/usersSelectors';\n\ntype mapStateToPropsType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n}\n\ntype UsersAPIComponentPropsType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setCurrentPage: (currentPage: number) => void\n    isFetching: boolean\n    followingInProgress: number[]\n    toggleIsFollowingProgress: (isFollowing: boolean, userId: number) => void\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\n    unfollowUsersThunkCreator: (userId: number) => void\n    followUsersThunkCreator: (userId: number) => void\n}\n\nexport function UsersComponent (props: UsersAPIComponentPropsType) {\n    useEffect(() => {\n        props.getUsersThunkCreator(props.currentPage, props.pageSize)\n    }, [])\n\n\n    const onPageChanged = (pageNumber: number) => {\n        props.getUsersThunkCreator(pageNumber, props.pageSize)\n    }\n\n        return <>\n            {props.isFetching ? <Preloader/> : null}\n            <Users users={props.users} pageSize={props.pageSize} follow={props.follow}\n                   unfollow={props.unfollow} currentPage={props.currentPage}\n                   totalUsersCount={props.totalUsersCount} onPageChanged={onPageChanged}\n                   followingInProgress={props.followingInProgress}\n                   toggleIsFollowingProgress={props.toggleIsFollowingProgress}\n                   unfollowUsersThunkCreator={props.unfollowUsersThunkCreator}\n                   followUsersThunkCreator={props.followUsersThunkCreator}/>\n        </>\n}\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        follow, unfollow, setCurrentPage, toggleIsFollowingProgress, getUsersThunkCreator, unfollowUsersThunkCreator,\n        followUsersThunkCreator\n    })\n)(UsersComponent)","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {Input} from '../components/common/FormsControls/FormsControl';\nimport {requiredField} from '../utils/validators/validators';\nimport s from '../components/common/FormsControls/FormsControl.module.css'\n\nexport type FormDataType = {\n    login: string\n    password: string\n    rememberMe: boolean\n}\n\nexport const LoginForm: React.FC<any> = ({handleSubmit, error}) => {\n    return <form onSubmit={handleSubmit}>\n        <div>\n            <Field placeholder={'Login'} name={'login'} component={Input} validate={[requiredField]}/>\n        </div>\n        <div>\n            <Field type={'password'} placeholder={'Password'} name={'password'} component={Input} validate={[requiredField]}/>\n        </div>\n        <div>\n            <Field type={'checkbox'} name={'rememberMe'} component={Input}/> remember me\n        </div>\n        {error ? <div className={s.formSummaryError}>{error}</div> : ''}\n        <div>\n            <button>Login</button>\n        </div>\n    </form>\n}\n\nexport const LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)","import React from 'react';\nimport {FormDataType, LoginReduxForm} from './LoginForm';\nimport {connect} from 'react-redux';\nimport {loginThunkCreator} from '../redux/authReduser';\nimport {Redirect} from 'react-router-dom';\nimport {AppStateType} from '../redux/redux-store';\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n}\n\ntype MapDispatchToPropsType = {\n    loginThunkCreator: (email: string, password: string, rememberMe: boolean) => void\n}\n\ntype LoginPropsType = mapStateToPropsType & MapDispatchToPropsType\n\nconst Login: React.FC<LoginPropsType> = ({loginThunkCreator, isAuth }) => {\n    const onSubmit = (formData: FormDataType) => {\n        loginThunkCreator(formData.login, formData.password, formData.rememberMe)\n    }\ndebugger\n    if (isAuth){\n        return <Redirect to={'/profile'}/>\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {loginThunkCreator})(Login)","import {authThunkCreator} from './authReduser';\n\nconst SET_INITIALIZED = 'SET_INITIALIZED'\n\ntype SetInitializedAT = {\n    type: 'SET_INITIALIZED'\n}\n\ntype AppStateType = {\n    initialized: boolean\n}\n\ntype ActionType = SetInitializedAT\n\nlet initialState: AppStateType = {\n    initialized: false\n}\n\nexport const appReducer = (state: AppStateType = initialState, action: ActionType): AppStateType => {\n    const stateCopy = {...state}\n\n    switch (action.type) {\n        case 'SET_INITIALIZED':\n            return {\n                ...stateCopy,\n                initialized: true\n            }\n        default:\n            return state\n    }\n}\n\nexport const InitializedSuccessAC = () => ({type: SET_INITIALIZED})\n\nexport const initializeApp = () => (dispatch: any) => {\n    let promise = dispatch(authThunkCreator())\n\n    Promise.all([promise])\n        .then(() => {\n            dispatch(InitializedSuccessAC())\n        })\n}\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport {profileReduser, UserProfilePage} from './profileReduser';\nimport {dialogsReduser} from './dialogsReduser';\nimport {usersReduser} from './usersReduser';\nimport {authReducer} from './authReduser';\nimport thunk from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form'\nimport {appReducer} from './appReduser';\n\nlet reducers = combineReducers({\n    profilePage: profileReduser,\n    dialogPage: dialogsReduser,\n    usersPage: usersReduser,\n    auth: authReducer,\n    app: appReducer,\n    form: formReducer\n})\n\nexport type AppStateType = ReturnType<typeof reducers>\n\nexport let store = createStore(reducers, applyMiddleware(thunk))\n\n// @ts-ignore\nwindow.store = store\n\nexport type RootStateType = {\n    profilePage: ProfilePageType\n    dialogPage: DialogPageType\n}\n\nexport type DialogPageType = {\n    dialogs: Array<DialogType>\n    messages: Array<MessageType>\n}\n\ntype DialogType = {\n    id: number\n    name: string\n}\n\nexport type ProfilePageType = {\n    posts: Array<PostType>\n    newPostText: string\n    profile: UserProfilePage\n}\n\nexport type PostType = {\n    id: number\n    message: string\n    likesCount: number\n}\n\nexport type MessageType = {\n    id: number\n    message: string\n}\n\n","import React, {ComponentType, Suspense} from 'react';\nimport {Preloader} from '../components/common/Preloader/Preloader';\n\nexport function WithSuspense<T>(Component: ComponentType<T>) {\n    return (props: any) => {\n        return <Suspense fallback={<Preloader/>}>\n            <Component {...props}/>\n        </Suspense>\n    }\n}","import './App.css';\nimport {Navbar} from './components/Navbar/Navbar';\nimport {BrowserRouter, HashRouter, Route, withRouter} from 'react-router-dom'\nimport {News} from './components/News/News';\nimport {Music} from './components/Music/Music';\nimport {Settings} from './components/Settings/Settings';\nimport {HeaderContainer} from './components/Header/HeaderContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport Login from './Login/Login';\nimport React from 'react';\nimport {connect, Provider} from 'react-redux';\nimport {compose} from 'redux';\nimport {initializeApp} from './redux/appReduser';\nimport {AppStateType, store} from './redux/redux-store';\nimport {Preloader} from './components/common/Preloader/Preloader';\nimport {WithSuspense} from './hoc/WithSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\nclass App extends React.Component<any, any> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route path=\"/dialogs\"\n                           render={WithSuspense(DialogsContainer)}/>\n                    <Route path=\"/profile/:userId?\"\n                           render={WithSuspense(ProfileContainer)}/>\n                    <Route path=\"/news\" render={() => <News/>}/>\n                    <Route path=\"/music\" render={() => <Music/>}/>\n                    <Route path=\"/users\"\n                           render={() => <UsersContainer/>}/>\n                    <Route path=\"/settings\" render={() => <Settings/>}/>\n                    <Route path=\"/login\" render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))\n(App);\n\nexport let SamuraiJSApp = () => {\n    return <Provider store={store}>\n        <HashRouter>\n            <AppContainer/>\n        </HashRouter>\n    </Provider>\n}","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {SamuraiJSApp} from './App';\n\nReactDOM.render(\n    <SamuraiJSApp/>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Users_user__1dQYj\",\"allUsers\":\"Users_allUsers__2JqLA\",\"image\":\"Users_image__2Sl9a\",\"main\":\"Users_main__103N1\",\"titleUsers\":\"Users_titleUsers__l2wTc\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"numberPage\":\"Users_numberPage__1entT\"};","export default __webpack_public_path__ + \"static/media/loader.70c0e9b1.gif\";","import loader from '../../../assets/loader.gif';\nimport React from 'react';\nimport style from './Preloader.module.css'\n\nexport function Preloader() {\n    return (\n        <div className={style.preloader}>\n            <img src={loader} style={{backgroundColor: 'white'}}/>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"image\":\"Header_image__1zcEI\",\"login\":\"Header_login__3V3Qa\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import s from './FormsControl.module.css'\n\nexport const Textarea: React.FC<any> = ({input, meta, ...props}) => {\n    const showError = meta.touched && meta.error && s.error\n\n    return (\n        <div className={s.formControl + ' ' + (showError ? s.error : '')}>\n            <div>\n                <textarea {...input} {...props}/>\n            </div>\n            {showError && <span>{meta.error}</span>}\n        </div>\n    )\n}\n\nexport const Input: React.FC<any> = ({input, meta, ...props}) => {\n    const showError = meta.touched && meta.error && s.error\n\n    return (\n        <div className={s.formControl + ' ' + (showError ? s.error : '')}>\n            <div>\n                <input {...input} {...props}/>\n            </div>\n            {showError && <span>{meta.error}</span>}\n        </div>\n    )\n}","export const requiredField = (value: any) => {\n    if(value) return undefined\n\n    return 'Field is required'\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\n\n    return undefined\n}\n\n","import {AppStateType} from './redux-store';\n\nexport const getIsAuth = (state: AppStateType) => {\n    return state.auth.isAuth\n}\n\nexport const getLogin = (state: AppStateType) => {\n    return state.auth.login\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","import React from 'react'\nimport {\n    FollowAT,\n    SetCurrentPageAT,\n    SetTotalCountAT,\n    SetUsersAT,\n    ToggleIsFetchingAT, ToggleIsFollowingProgressAT,\n    UnfollowAT\n} from './usersReduser';\nimport {PostType} from './redux-store';\nimport {profileAPI, UpdateProfileType} from '../api/api';\nimport {NewMessageActionType} from './dialogsReduser';\nimport {Dispatch} from 'redux';\nimport {stopSubmit} from 'redux-form';\n\nexport const ADD_POST = 'ADD-POST'\nexport const DELETE_POST = 'DELETE-POST'\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE'\nexport const SET_NEW_STATUS = 'SET_NEW_STATUS'\nexport const SET_NEW_PHOTO = 'SET_NEW_PHOTO'\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 5},\n        {id: 2, message: 'It\\'s my first post', likesCount: 23}\n    ],\n    profile: null,\n    status: ''\n}\n\nexport type ProfilePageType = {\n    posts: Array<PostType>\n    profile: UserProfilePage | null\n    status: string\n}\n\nexport type UserProfilePage = {\n    aboutMe: string\n    contacts: Contacts\n    lookingForAJob: boolean\n    lookingForAJobDescription: string | null\n    fullName: string | null\n    userId: number\n    photos: Photos\n}\n\ntype Contacts = {\n    facebook: string | null\n    website: string | null\n    vk: string | null\n    twitter: string | null\n    instagram: string | null\n    youtube: string | null\n    github: string | null\n    mainLink: string | null\n}\n\ntype Photos = {\n    small: string | undefined\n    large: string | undefined\n}\n\nexport type AddPostActionType = {\n    type: 'ADD-POST'\n    newPostBody: string\n}\n\nexport type DeletePostActionType = {\n    type: 'DELETE-POST'\n    postId: number\n}\n\nexport type setUserProfileAT = {\n    type: 'SET_USER_PROFILE'\n    profile: any\n}\n\nexport type setNewStatusAT = {\n    type: 'SET_NEW_STATUS'\n    newStatus: string\n}\n\nexport type setNewPhotoAT = {\n    type: 'SET_NEW_PHOTO'\n    photos: PhotosType\n}\n\ntype PhotosType = {\n    small: string\n    large: string\n}\n\nexport type ActionType =\n    AddPostActionType\n    | NewMessageActionType\n    | FollowAT\n    | UnfollowAT\n    | SetUsersAT\n    | SetCurrentPageAT\n    | SetTotalCountAT\n    | ToggleIsFetchingAT\n    | setUserProfileAT\n    | ToggleIsFollowingProgressAT\n    | setNewStatusAT\n    | DeletePostActionType\n    | setNewPhotoAT\n\nexport const profileReduser = (state: ProfilePageType = initialState, action: ActionType) => {\n    switch (action.type) {\n        case ADD_POST: {\n            return {\n                ...state,\n                posts: [...state.posts, {id: 3, message: action.newPostBody, likesCount: 0}]\n            }\n        }\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            }\n        case SET_NEW_STATUS:\n            return {\n                ...state,\n                status: action.newStatus\n            }\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id !== action.postId)\n            }\n        case SET_NEW_PHOTO:\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const addPostActionCreator = (newPostBody: string): AddPostActionType => ({type: ADD_POST, newPostBody})\nexport const deletePostActionCreator = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId})\n\nexport const setUserProfile = (profile: any): setUserProfileAT => ({\n    type: SET_USER_PROFILE, profile\n})\n\nexport const changeStatusAC = (newStatus: string): setNewStatusAT => ({\n    type: SET_NEW_STATUS, newStatus\n})\n\nexport const updatePhotoAC = (photos: PhotosType): setNewPhotoAT => ({\n    type: SET_NEW_PHOTO, photos\n})\n\n\nexport const getMeProfileThunkCreator = (userId: number) => async (dispatch: Dispatch) => {\n    let response = await profileAPI.getMeProfile(userId)\n    dispatch(setUserProfile(response.data))\n}\n\nexport const getMeStatusThunkCreator = (userId: number) => async (dispatch: Dispatch) => {\n    let response = await profileAPI.getMeStatus(userId)\n    dispatch(changeStatusAC(response.data))\n}\n\nexport const updateStatusThunkCreator = (status: string) => async (dispatch: Dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(changeStatusAC(status))\n    }\n}\n\nexport const savePhoto = (file: File) => async (dispatch: Dispatch) => {\n    let response = await profileAPI.createPhoto(file)\n    if (response.data.resultCode === 0) {\n        dispatch(updatePhotoAC(response.data.data.photos))\n    }\n}\n\nexport const saveProfile = (updatedProfile: UpdateProfileType) => async (dispatch: any, getState: any) => {\n    const userId = getState().auth.userId\n\n    let response = await profileAPI.updateProfile(updatedProfile)\n\n    if (response.data.resultCode === 0) {\n        dispatch(getMeProfileThunkCreator(userId))\n    }else {\n        dispatch(stopSubmit('login', {_error: response.data.messages[0]}))\n    }\n}"],"sourceRoot":""}