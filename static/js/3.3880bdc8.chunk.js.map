{"version":3,"sources":["hoc/AuthRedirect.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","components/Profile/My Posts/MyPosts.module.css","components/Profile/My Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/My Posts/Post/Post.tsx","components/Profile/My Posts/MyPostsForm..tsx","components/Profile/My Posts/MyPosts.tsx","redux/profilesSelectors.ts","components/Profile/My Posts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateStatus","value","onChange","e","currentTarget","autoFocus","className","s","onDoubleClick","ProfileInfo","profile","image_block","src","alt","description_block","photos","large","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","vk","github","instagram","twitter","mainLink","website","youtube","changeStatusAC","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPostsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","requiredField","MyPosts","React","memo","postsElements","posts","map","p","id","posts_block","formData","addPostActionCreator","newPostBody","getMeProfile","profilePage","getMeStatus","getMeAutorizedUserID","userId","getMePosts","MyPostsContainer","Profile","document","title","Helmet","content","compose","autorizedUserID","getIsAuth","setUserProfile","getMeProfileThunkCreator","getMeStatusThunkCreator","updateStatusThunkCreator","createPhotoThunkCreator","withRouter","Number","match","params","history","push"],"mappings":"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","file":"static/js/3.3880bdc8.chunk.js","sourcesContent":["import {Redirect} from 'react-router-dom';\nimport React, {ComponentType} from 'react';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../redux/redux-store';\n\ntype MapStateToProps = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: AppStateType):MapStateToProps => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n\n    const RedirectComponent = (props: MapStateToProps) => {\n        let {isAuth, ...restProps} = props\n\n        if (!isAuth) return <Redirect to={'/login'}/>\n\n        return <Component {...restProps as T}/>\n    }\n\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n    return ConnectedRedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description_block\":\"ProfileInfo_description_block__187mR\",\"image_block\":\"ProfileInfo_image_block__2czoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__SCDgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_block\":\"MyPosts_posts_block__12W53\",\"posts\":\"MyPosts_posts__3ZUOo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__371Kq\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport s from './ProfileStatus.module.css'\n\ntype ProfileStatusWithHooksPropsType = {\n    status: string\n    changeStatusAC: (newStatus: string) => void\n    updateStatus: (status: string) => void\n}\n\nexport function ProfileStatusWithHooks(props: ProfileStatusWithHooksPropsType) {\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status)\n    },[props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const ChangeStatus = (e: ChangeEvent<HTMLInputElement>) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            {editMode ?\n                <div>\n                    <input onBlur={deactivateEditMode} value={status} onChange={ChangeStatus} autoFocus/>\n                </div>\n                : <div className={s.status}>\n                    <span onDoubleClick={activateEditMode}>{props.status} </span>\n                </div>\n            }\n        </div>\n\n    )\n}","import s from './ProfileInfo.module.css'\nimport {UserProfilePage} from '../../../redux/profileReduser';\nimport {Preloader} from '../../common/Preloader/Preloader';\nimport {ProfileStatusWithHooks} from './ProfileStatusWithHooks';\n\ntype ProfileInfoPropsType = {\n    profile: UserProfilePage | null\n    status: string\n    changeStatusAC: (newStatus: string) => void\n    updateStatus: (status: string) => void\n}\n\nexport function ProfileInfo(props: ProfileInfoPropsType) {\n    if(!props.profile){\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div className={s.image_block}>\n                <img\n                    src=\"https://www.yashcreations.com/wp-content/uploads/2016/08/web-development-Banner.jpg\"\n                    alt=\"\"/>\n            </div>\n            <div className={s.description_block}>\n                <img src={props.profile.photos.large}/>\n                <div>\n                    <h1>{props.profile.fullName}</h1>\n                    <p>{props.profile.aboutMe}</p>\n                    <p>{props.profile.lookingForAJob ? 'Ищу работу ' : 'Не ищу работу '}<span>({props.profile.lookingForAJobDescription})</span></p>\n                    <div>Contacts:</div>\n                    <div>\n                        <p>{props.profile.contacts.facebook}</p>\n                        <p>{props.profile.contacts.vk}</p>\n                        <p>{props.profile.contacts.github}</p>\n                        <p>{props.profile.contacts.instagram}</p>\n                        <p>{props.profile.contacts.twitter}</p>\n                        <p>{props.profile.contacts.mainLink}</p>\n                        <p>{props.profile.contacts.website}</p>\n                        <p>{props.profile.contacts.youtube}</p>\n                    </div>\n                </div>\n            </div>\n            <ProfileStatusWithHooks status={props.status} changeStatusAC={props.changeStatusAC} updateStatus={props.updateStatus}/>\n        </div>\n    )\n}\n\n\n","import s from './Post.module.css'\n\ntype PostPropsType = {\n    message: string\n    likesCount: number\n    id: number\n}\n\nexport function Post(props: PostPropsType) {\n    return (\n\n        <div className={s.item}>\n            <img\n                src='https://www.liveabout.com/thmb/pElYdfgKoydmsrso8fiU1wd-jO0=/1449x1449/smart/filters:no_upscale()/Avatar_12_HR_01-56a00ca93df78cafda9fd17c.jpg'/>\n            {props.message}\n            <div>\n                <span>like</span> {props.likesCount}\n            </div>\n        </div>\n\n    )\n}\n\n\n","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\nimport {maxLengthCreator, requiredField} from '../../../utils/validators/validators';\nimport {Textarea} from '../../common/FormsControls/FormsControl';\n\nexport type MyPostsFormType = {\n    newPostBody: string\n}\n\nconst maxLength10 = maxLengthCreator(10)\n\nexport const MyPostsForm: React.FC<InjectedFormProps<MyPostsFormType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={'Enter your post'} name={'newPostBody'} component={Textarea}\n                       validate={[requiredField, maxLength10]}/>\n            </div>\n            <div>\n                <button>Add</button>\n            </div>\n        </form>\n    )\n}\n\nexport const MyPostsFormRedux = reduxForm<MyPostsFormType>({form: 'profileMyPostsForm'})(MyPostsForm)","import React from 'react'\nimport s from './MyPosts.module.css'\nimport {Post} from './Post/Post';\nimport {PostType} from '../../../redux/redux-store';\nimport {MyPostsFormRedux, MyPostsFormType} from './MyPostsForm.';\n\n\ntype MyPostsType = {\n    addPostActionCreator: (newPostBody: string) => void\n    posts: Array<PostType>\n}\n\nexport const MyPosts = React.memo(function (props: MyPostsType) {\n    const postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} id={p.id}/>)\n\n    const onSubmit = (formData: MyPostsFormType) => {\n        props.addPostActionCreator(formData.newPostBody)\n    }\n\n    return (\n        <div className={s.posts_block}>\n            <h3>My posts</h3>\n            <MyPostsFormRedux onSubmit={onSubmit}/>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n})\n\n\n","import {AppStateType} from './redux-store';\n\nexport const getMeProfile = (state: AppStateType) => {\n    return state.profilePage.profile\n}\n\nexport const getMeStatus = (state: AppStateType) => {\n    return state.profilePage.status\n}\n\nexport const getMeAutorizedUserID = (state: AppStateType) => {\n    return state.auth.userId\n}\n\nexport const getMePosts = (state: AppStateType) => {\n    return state.profilePage.posts\n}\n","import React from 'react'\nimport {addPostActionCreator} from '../../../redux/profileReduser';\nimport {MyPosts} from './MyPosts';\nimport {AppStateType, PostType} from '../../../redux/redux-store';\nimport {connect} from 'react-redux';\nimport {getMePosts} from '../../../redux/profilesSelectors';\n\n\ntype mapStateToPropsType = {\n    posts: Array<PostType>\n}\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        posts: getMePosts(state)\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, {addPostActionCreator})(MyPosts);\n\n\n","import s from './Profile.module.css'\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\nimport React, {ReactNode} from 'react';\nimport {MyPostsContainer} from './My Posts/MyPostsContainer';\nimport {Helmet} from 'react-helmet';\nimport {UserProfilePage} from '../../redux/profileReduser';\n\ntype ProfilePropsType = {\n    children?: ReactNode\n    profile: UserProfilePage | null\n    status: string\n    changeStatusAC: (newStatus: string) => void\n    updateStatus: (status: string) => void\n}\n\nexport function Profile(props: ProfilePropsType) {\n    document.title = 'Profile'\n\n    return (\n        <div>\n            <Helmet>\n                <title>Profile</title>\n                <meta name=\"description\" content=\"Profile application\"/>\n            </Helmet>\n            <ProfileInfo profile={props.profile} status={props.status} changeStatusAC={props.changeStatusAC}\n                         updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    )\n}\n\n\n","import React, {useEffect} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {Profile} from './Profile';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../../redux/redux-store';\nimport {\n    changeStatusAC, createPhotoThunkCreator,\n    getMeProfileThunkCreator,\n    getMeStatusThunkCreator,\n    setUserProfile, updateStatusThunkCreator,\n    UserProfilePage\n} from '../../redux/profileReduser';\nimport {withRouter} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router'\nimport {withAuthRedirect} from '../../hoc/AuthRedirect';\nimport {compose} from 'redux';\nimport {getMeAutorizedUserID, getMeProfile, getMeStatus} from '../../redux/profilesSelectors';\nimport {getIsAuth} from '../../redux/headerSelectors';\n\ntype PathParamsType = {\n    userId: string | undefined\n}\ntype MapStateToPropsType = {\n    profile: UserProfilePage | null\n    status: string\n    autorizedUserID: any\n    isAuth: boolean\n}\ntype MapDispatchToPropsType = {\n    setUserProfile: (profile: UserProfilePage) => void\n    changeStatusAC: (newStatus: string) => void\n    getMeStatusThunkCreator: (userId: number) => void\n    updateStatusThunkCreator: (status: string) => void\n    createPhotoThunkCreator: any\n}\ntype thunkPropsType = {\n    getMeProfileThunkCreator: (userId: number) => void\n}\ntype ProfileAPIContainerPropsType = MapStateToPropsType & MapDispatchToPropsType & thunkPropsType\n\n\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileAPIContainerPropsType\n\n\nfunction ProfileContainer (props: PropsType){\n    useEffect(() => {\n        let userId = Number(props.match.params.userId)\n        if (!userId) {\n            userId = props.autorizedUserID\n            if(!userId){\n                props.history.push('/login')\n            }\n        }\n        props.getMeProfileThunkCreator(userId)\n        props.getMeStatusThunkCreator(userId)\n        props.createPhotoThunkCreator()\n    },[])\n\n        return (\n            <div>\n                <Helmet>\n                    <title>Profile</title>\n                    <meta name=\"description\" content=\"Profile application\"/>\n                </Helmet>\n                <Profile {...props} profile={props.profile} status={props.status}\n                         changeStatusAC={props.changeStatusAC} updateStatus={props.updateStatusThunkCreator}/>\n            </div>\n        )\n}\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    profile: getMeProfile(state),\n    status: getMeStatus(state),\n    autorizedUserID: getMeAutorizedUserID(state),\n    isAuth: getIsAuth(state)\n})\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        setUserProfile, getMeProfileThunkCreator, changeStatusAC,\n        getMeStatusThunkCreator, updateStatusThunkCreator,createPhotoThunkCreator\n    }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n\n\n"],"sourceRoot":""}